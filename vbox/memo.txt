新規性
1. ニューラルネットワーク word2vec と Long short-term memory (LSTM) を文書中の誤用を検出及び修正候補の抽出に利用した点
2. 文章中の単語の表記ゆれの検出、修正候補の抽出に word2vec と LSTM を利用した点

検出部
1. 文書中に存在する不具合（表記ゆれ、誤用）を検出したい文書（以後、対象文書）をテキストデータとして入力
2. 入力された文書中の文字列(w1w2w3w4...)を MeCab のような形態素解析ツールを利用し、意味のある単位で分かち書きする。
   - 意味のある単位で分割するため、形態素解析ツール (MeCab) を利用した分かち書き (w1 w2 w3 w4 ...)
   - 文単位でのまとまりを認識するため、句点の前に文頭記号<BOS>, 句点の後に文末記号<EOS>を挿入 (<BOS> w1 w2 w3 ... wt <EOS> ...)
3. 対象文書内に存在する全単語に対応する分散表現を学習部の全単語に含まれる中から抽出する。
   ここで、対象文書から直接分散表現を求めることも可能であるが、文書中に誤用が含まれる可能性があるため理想的な分散表現が得られる
   とは言い難い。新たな計算コストもかかるため、学習部の分散表現を利用する。
4. 対象文書中の各単語に対して、学習部より抽出した分散表現、学習部から取得した LSTM 計算時の重みパラメータを利用し、ある単語がその位置に
   出現する確率を各単語ごとに表した確率分布を計算する
5. 検出したい単語（以後、検出対象）がその場所に出現する確率が、上位 n 位以内に含まれるかを確認する (1/n * p が上位 m 位に存在する場合 or not)
   - 含まれる場合、その単語がその位置に来るのは尤もらしいと判断し、表記ゆれ検出処理 (7) に移行する
   - 含まれない場合、(6) に進む
6.
7. 表記ゆれ検出処理
8. 全ての単語に対して検出が完了した場合、


効果
・word2vec の分散表現と LSTM により得られる各単語がその位置に出現する確率分布を求める事によって、文章中の単語の誤用とその修正候補の検出が実現できる
・さらに、分散表現により得られるベクトルの類似度と LSTM により得られる単語の出現確率から、文章の文脈を考慮した表記ゆれとその修正候補の検出が実現できる
・これらをユーザが入力した文書に対して自動で検出・提示することで、不具合文書の修正に関わるコストを削減することができる
